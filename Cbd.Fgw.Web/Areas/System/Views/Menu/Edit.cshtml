@model Cbd.Fgw.Application.System.Menu.Dto.MenuDto
@{
    ViewBag.Title = "编辑菜单";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts{

    @if (!ViewData.ModelState.IsValid)
    {
        <script>
            var error =
                adderror('@Html.ValidationMessageFor(u => u.MenuName, "", new {@class = "text-danger"})') +
                    adderror('@Html.ValidationMessageFor(u => u.MenuUrl, "", new {@class = "text-danger"})') +
                    adderror('@Html.ValidationMessageFor(u => u.Icon, "", new {@class = "text-danger"})') +
                    adderror('@Html.ValidationMessageFor(u => u.IsMenuGroup, "", new {@class = "text-danger"})') +
                    adderror('@Html.ValidationMessageFor(u => u.ParentMenuId, "", new {@class = "text-danger"})') +
                    adderror('@Html.ValidationMessageFor(u => u.Describe, "", new {@class = "text-danger"})');
            $.sys.showerror(error);
        </script>
    }
    else
    {
        if (ViewBag.Success != null)
        {
            <script>
                $.sys.alertClose("菜单修改成功！", { icon: 2 });
            </script>
        }
    }
}

<div class="well bs-component">
    @using (Html.BeginForm("Edit", "Menu", FormMethod.Post, new { @class = "form-horizontal" })) {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        <div class="form-group">
            @Html.LabelFor(u => u.MenuName, new { @class = "col-xs-3 control-label" })
            <div class="col-xs-8">
                @Html.EditorFor(u => u.MenuName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(u => u.MenuUrl, new { @class = "col-xs-3 control-label" })
            <div class="col-xs-8">
                @Html.EditorFor(u => u.MenuUrl, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(u => u.Icon, new { @class = "col-xs-3 control-label" })
            <div class="col-xs-8">
                @Html.EditorFor(u => u.Icon, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(u => u.IsMenuGroup, new { @class = "col-xs-3 control-label" })
            <div class="col-xs-8">
                <div class="checkbox">
                    <label>
                        @Html.EditorFor(u => u.IsMenuGroup)
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(u => u.ParentMenu, new { @class = "col-xs-3 control-label" })
            <div class="col-xs-8">
                @Html.EditorFor(u => u.ParentMenuId, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(u => u.Describe, new { @class = "col-xs-3 control-label" })
            <div class="col-xs-8">
                @Html.EditorFor(u => u.Describe, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>


        <div class="form-group">
            <div class="col-xs-offset-3 col-xs-8">
                <button type="submit" class="btn btn-raised">提交</button>
            </div>
        </div>
    }
</div>
